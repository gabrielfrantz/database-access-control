name: Gerar relatórios

on:
  workflow_dispatch:
    inputs:
      report_type:
        description: "Tipo de relatório"
        required: true
        type: choice
        options: 
          - "usuario-especifico"
          - "todos-usuarios"
        default: "usuario-especifico"
      user_email:
        description: "Email do usuário (obrigatório apenas para relatório específico)"
        required: false
        type: string
      database_name:
        description: "Nome do banco específico (opcional - deixe vazio para relatório completo)"
        required: false
        type: string
      output_format:
        description: "Formato de saída"
        required: true
        type: choice
        options: [html, json]
        default: html

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  # Validação de segurança obrigatória
  security-validation:
    name: 🛡️ Validação de Segurança
    uses: ./.github/workflows/reusable-security-check.yml
    with:
      workflow_name: "Gerar relatórios"
      operation_type: "audit"

  generate-reports:
    name: 📊 Gerar Relatórios
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    
    needs: security-validation
    if: needs.security-validation.outputs.is_secure == 'true'

    steps:
      - name: Security Confirmation
        run: |
          echo "🛡️ VALIDAÇÃO DE SEGURANÇA APROVADA"
          echo "================================="
          echo "🎯 Status: ${{ needs.security-validation.outputs.security_status }}"
          echo "🔓 Prosseguindo com geração de relatórios..."

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          pip install pyyaml

      - name: Validate Inputs
        run: |
          echo "🔍 Validando inputs do relatório..."
          
          if [ "${{ github.event.inputs.report_type }}" == "usuario-especifico" ]; then
            if [ -z "${{ github.event.inputs.user_email }}" ]; then
              echo "❌ Email do usuário é obrigatório para relatório específico"
              exit 1
            fi
          fi
          
          echo "✅ Inputs validados"
          echo "📊 Tipo: ${{ github.event.inputs.report_type }}"
          echo "👤 Usuário: ${{ github.event.inputs.user_email || 'Todos os usuários' }}"
          echo "🗄️ Banco: ${{ github.event.inputs.database_name || 'Todos os bancos' }}"
          echo "📄 Formato: ${{ github.event.inputs.output_format }}"

      - name: Generate General Report (All Users)
        if: github.event.inputs.report_type == 'todos-usuarios'
        run: |
          echo "🔍 Gerando relatório geral para todos os usuários..."
          
          # Gerar nome do arquivo baseado no formato
          timestamp=$(date +%Y%m%d-%H%M%S)
          
          if [ "${{ github.event.inputs.output_format }}" == "html" ]; then
            output_file="relatorio-geral-todos-usuarios-${timestamp}.html"
          else
            output_file="relatorio-geral-todos-usuarios-${timestamp}.json"
          fi
          
          echo "📁 Arquivo de saída: $output_file"
          
          # Executar geração do relatório geral
          if [ "${{ github.event.inputs.output_format }}" == "html" ]; then
            python scripts/generate_general_report.py --output "$output_file"
          else
            echo "⚠️ Formato JSON não suportado para relatório geral. Gerando em HTML..."
            python scripts/generate_general_report.py --output "${output_file%.json}.html"
          fi
          
          echo "✅ Relatório geral gerado com sucesso!"

      - name: Generate User Specific Report
        if: github.event.inputs.report_type == 'usuario-especifico'
        run: |
          echo "🔍 Gerando relatório para usuário: ${{ github.event.inputs.user_email }}"
          
          # Determinar tipo de relatório
          if [ -n "${{ github.event.inputs.database_name }}" ]; then
            report_subtype="específico"
            database_param="--database ${{ github.event.inputs.database_name }}"
            output_suffix="${{ github.event.inputs.database_name }}"
          else
            report_subtype="completo"
            database_param=""
            output_suffix="completo"
          fi
          
          echo "📊 Subtipo de relatório: $report_subtype"
          
          # Gerar nome do arquivo baseado no formato
          timestamp=$(date +%Y%m%d-%H%M%S)
          user_clean=$(echo "${{ github.event.inputs.user_email }}" | sed 's/@/-at-/g' | sed 's/\./-/g')
          
          if [ "${{ github.event.inputs.output_format }}" == "html" ]; then
            output_file="relatorio-${user_clean}-${output_suffix}-${timestamp}.html"
          else
            output_file="relatorio-${user_clean}-${output_suffix}-${timestamp}.json"
          fi
          
          echo "📁 Arquivo de saída: $output_file"
          
          # Executar geração do relatório específico
          python scripts/generate_audit_reports.py \
            --user "${{ github.event.inputs.user_email }}" \
            $database_param \
            --format ${{ github.event.inputs.output_format }} \
            --output "$output_file"
          
          echo "✅ Relatório específico gerado com sucesso!"

      - name: Upload Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: relatorio-${{ github.event.inputs.report_type }}-${{ github.event.inputs.output_format }}
          path: "*.html,*.json"
          retention-days: 30

      - name: Generate Summary
        run: |
          echo "## 📊 Relatório Gerado" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.report_type }}" == "todos-usuarios" ]; then
            echo "**📋 Tipo:** Relatório Geral (Todos os Usuários)" >> $GITHUB_STEP_SUMMARY
            echo "**🗄️ Escopo:** Sistema completo" >> $GITHUB_STEP_SUMMARY
            echo "**👥 Usuários:** Todos os usuários do sistema" >> $GITHUB_STEP_SUMMARY
          else
            echo "**📋 Tipo:** Relatório Específico" >> $GITHUB_STEP_SUMMARY
            echo "**👤 Usuário:** ${{ github.event.inputs.user_email }}" >> $GITHUB_STEP_SUMMARY
            
            if [ -n "${{ github.event.inputs.database_name }}" ]; then
              echo "**🗄️ Banco:** ${{ github.event.inputs.database_name }}" >> $GITHUB_STEP_SUMMARY
              echo "**📋 Escopo:** Banco específico" >> $GITHUB_STEP_SUMMARY
            else
              echo "**🗄️ Banco:** Todos os bancos do usuário" >> $GITHUB_STEP_SUMMARY
              echo "**📋 Escopo:** Completo do usuário" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          echo "**📄 Formato:** ${{ github.event.inputs.output_format }}" >> $GITHUB_STEP_SUMMARY
          echo "**📅 Gerado em:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Relatório disponível nos artefatos do workflow." >> $GITHUB_STEP_SUMMARY