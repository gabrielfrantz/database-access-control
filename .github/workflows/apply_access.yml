name: Apply DB Access

on:
  push:
    branches:
      - main
    paths:
      - 'users-access-requests/**.yml'

jobs:
  apply-access:
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Instalar yq
        run: |
          sudo apt-get update && sudo apt-get install -y yq

      - name: Detect modified and deleted files
        id: changes
        run: |
          echo "MODIFIED_FILES<<EOF" >> $GITHUB_OUTPUT
          git diff --name-status ${{ github.event.before }} ${{ github.sha }} | awk '/^[A|M]/ && $2 ~ /^users-access-requests\/.*\.yml$/ { print $2 }' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "DELETED_FILES<<EOF" >> $GITHUB_OUTPUT
          git diff --name-status ${{ github.event.before }} ${{ github.sha }} | awk '/^D/ && $2 ~ /^users-access-requests\/.*\.yml$/ { print $2 }' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Aplicar permissões (loop por arquivos modificados)
        run: |
          echo "${{ steps.changes.outputs.MODIFIED_FILES }}" | while read file; do
            echo "🔍 Processando arquivo: $file"

            db=$(yq '.database' "$file")
            engine=$(yq '.engine' "$file")

            key="rds-access-control-${db}-${engine}"

            user=$(aws ssm get-parameter --name "$key-user" --with-decryption --query Parameter.Value --output text)
            pass=$(aws ssm get-parameter --name "$key-password" --with-decryption --query Parameter.Value --output text)

            export DB_USER="$user"
            export DB_PASS="$pass"
            export DB_HOST=$(yq '.host' "$file")

            echo "Aplicando permissões do arquivo: $file"
            python scripts/apply_permissions.py "$file"
          done

      - name: Revogar acessos (arquivos deletados)
        if: steps.changes.outputs.DELETED_FILES != ''
        run: |
          echo "${{ steps.changes.outputs.DELETED_FILES }}" | while read file; do
            echo "Revogando permissões do arquivo removido: $file"
            git show ${{ github.event.before }}:$file > /tmp/tmpfile.yml
            python scripts/revoke_permissions.py /tmp/tmpfile.yml
          done
